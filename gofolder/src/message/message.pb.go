// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	SessionId
	Ping
	ChatReq
	ChatAccept
	ChatMsg
	S2SLoginReq
	S2SChatMsg
	S2SStatus
	DBOperationReq
	DBOperationResp
	DBOperationRespContent
	DBOperationRespAck
	LoginReq
	LoginResp
	ServerInfoReq
	ServerInfoResp
	Register
	Order
	Resp
	Calculate
*/
package message

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type DBOperationRespAck_Status int32

const (
	DBOperationRespAck_SUCCESS DBOperationRespAck_Status = 0
	DBOperationRespAck_FAILED  DBOperationRespAck_Status = 1
)

var DBOperationRespAck_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}
var DBOperationRespAck_Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x DBOperationRespAck_Status) Enum() *DBOperationRespAck_Status {
	p := new(DBOperationRespAck_Status)
	*p = x
	return p
}
func (x DBOperationRespAck_Status) String() string {
	return proto.EnumName(DBOperationRespAck_Status_name, int32(x))
}
func (x *DBOperationRespAck_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DBOperationRespAck_Status_value, data, "DBOperationRespAck_Status")
	if err != nil {
		return err
	}
	*x = DBOperationRespAck_Status(value)
	return nil
}

type SessionId struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionId) Reset()         { *m = SessionId{} }
func (m *SessionId) String() string { return proto.CompactTextString(m) }
func (*SessionId) ProtoMessage()    {}

func (m *SessionId) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type Ping struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}

func (m *Ping) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type ChatReq struct {
	From             *string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To               *string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatReq) Reset()         { *m = ChatReq{} }
func (m *ChatReq) String() string { return proto.CompactTextString(m) }
func (*ChatReq) ProtoMessage()    {}

func (m *ChatReq) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *ChatReq) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

type ChatAccept struct {
	From             *string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To               *string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChatAccept) Reset()         { *m = ChatAccept{} }
func (m *ChatAccept) String() string { return proto.CompactTextString(m) }
func (*ChatAccept) ProtoMessage()    {}

func (m *ChatAccept) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *ChatAccept) GetTo() string {
	if m != nil && m.To != nil {
		return *m.To
	}
	return ""
}

type ChatMsg struct {
	From             *string  `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To               []string `protobuf:"bytes,2,rep,name=to" json:"to,omitempty"`
	Content          *string  `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Group            *string  `protobuf:"bytes,4,opt,name=group" json:"group,omitempty"`
	ServerGroup      *string  `protobuf:"bytes,5,opt,name=server_group" json:"server_group,omitempty"`
	ServerId         *string  `protobuf:"bytes,6,opt,name=server_id" json:"server_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ChatMsg) Reset()         { *m = ChatMsg{} }
func (m *ChatMsg) String() string { return proto.CompactTextString(m) }
func (*ChatMsg) ProtoMessage()    {}

func (m *ChatMsg) GetFrom() string {
	if m != nil && m.From != nil {
		return *m.From
	}
	return ""
}

func (m *ChatMsg) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *ChatMsg) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *ChatMsg) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *ChatMsg) GetServerGroup() string {
	if m != nil && m.ServerGroup != nil {
		return *m.ServerGroup
	}
	return ""
}

func (m *ChatMsg) GetServerId() string {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return ""
}

type S2SLoginReq struct {
	ServerId         *string `protobuf:"bytes,1,opt,name=server_id" json:"server_id,omitempty"`
	Ip               *string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *S2SLoginReq) Reset()         { *m = S2SLoginReq{} }
func (m *S2SLoginReq) String() string { return proto.CompactTextString(m) }
func (*S2SLoginReq) ProtoMessage()    {}

func (m *S2SLoginReq) GetServerId() string {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return ""
}

func (m *S2SLoginReq) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *S2SLoginReq) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type S2SChatMsg struct {
	ChatMsg          *ChatMsg `protobuf:"bytes,1,opt,name=chat_msg" json:"chat_msg,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *S2SChatMsg) Reset()         { *m = S2SChatMsg{} }
func (m *S2SChatMsg) String() string { return proto.CompactTextString(m) }
func (*S2SChatMsg) ProtoMessage()    {}

func (m *S2SChatMsg) GetChatMsg() *ChatMsg {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

type S2SStatus struct {
	ServerId         *string `protobuf:"bytes,1,opt,name=server_id" json:"server_id,omitempty"`
	UserCount        *int32  `protobuf:"varint,2,opt,name=user_count" json:"user_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *S2SStatus) Reset()         { *m = S2SStatus{} }
func (m *S2SStatus) String() string { return proto.CompactTextString(m) }
func (*S2SStatus) ProtoMessage()    {}

func (m *S2SStatus) GetServerId() string {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return ""
}

func (m *S2SStatus) GetUserCount() int32 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

type DBOperationReq struct {
	Procedure        *string `protobuf:"bytes,1,opt,name=procedure" json:"procedure,omitempty"`
	Sql              *string `protobuf:"bytes,2,opt,name=sql" json:"sql,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DBOperationReq) Reset()         { *m = DBOperationReq{} }
func (m *DBOperationReq) String() string { return proto.CompactTextString(m) }
func (*DBOperationReq) ProtoMessage()    {}

func (m *DBOperationReq) GetProcedure() string {
	if m != nil && m.Procedure != nil {
		return *m.Procedure
	}
	return ""
}

func (m *DBOperationReq) GetSql() string {
	if m != nil && m.Sql != nil {
		return *m.Sql
	}
	return ""
}

type DBOperationResp struct {
	TotalRecord      *string `protobuf:"bytes,1,opt,name=total_record" json:"total_record,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DBOperationResp) Reset()         { *m = DBOperationResp{} }
func (m *DBOperationResp) String() string { return proto.CompactTextString(m) }
func (*DBOperationResp) ProtoMessage()    {}

func (m *DBOperationResp) GetTotalRecord() string {
	if m != nil && m.TotalRecord != nil {
		return *m.TotalRecord
	}
	return ""
}

type DBOperationRespContent struct {
	Result           *string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DBOperationRespContent) Reset()         { *m = DBOperationRespContent{} }
func (m *DBOperationRespContent) String() string { return proto.CompactTextString(m) }
func (*DBOperationRespContent) ProtoMessage()    {}

func (m *DBOperationRespContent) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type DBOperationRespAck struct {
	Status           *DBOperationRespAck_Status `protobuf:"varint,1,opt,name=status,enum=DBOperationRespAck_Status" json:"status,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *DBOperationRespAck) Reset()         { *m = DBOperationRespAck{} }
func (m *DBOperationRespAck) String() string { return proto.CompactTextString(m) }
func (*DBOperationRespAck) ProtoMessage()    {}

func (m *DBOperationRespAck) GetStatus() DBOperationRespAck_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return DBOperationRespAck_SUCCESS
}

type LoginReq struct {
	UserId           *string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}

func (m *LoginReq) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type LoginResp struct {
	SessionId        *string `protobuf:"bytes,1,opt,name=session_id" json:"session_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginResp) Reset()         { *m = LoginResp{} }
func (m *LoginResp) String() string { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()    {}

func (m *LoginResp) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

type ServerInfoReq struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Param            *string `protobuf:"bytes,2,opt,name=param" json:"param,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerInfoReq) Reset()         { *m = ServerInfoReq{} }
func (m *ServerInfoReq) String() string { return proto.CompactTextString(m) }
func (*ServerInfoReq) ProtoMessage()    {}

func (m *ServerInfoReq) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServerInfoReq) GetParam() string {
	if m != nil && m.Param != nil {
		return *m.Param
	}
	return ""
}

type ServerInfoResp struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerInfoResp) Reset()         { *m = ServerInfoResp{} }
func (m *ServerInfoResp) String() string { return proto.CompactTextString(m) }
func (*ServerInfoResp) ProtoMessage()    {}

func (m *ServerInfoResp) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServerInfoResp) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type Register struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id               *string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Email            *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Register) Reset()         { *m = Register{} }
func (m *Register) String() string { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()    {}

func (m *Register) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Register) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Register) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type Order struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ProductName      *string `protobuf:"bytes,2,opt,name=product_name" json:"product_name,omitempty"`
	Money            *string `protobuf:"bytes,3,opt,name=money" json:"money,omitempty"`
	Time             *string `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}

func (m *Order) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Order) GetProductName() string {
	if m != nil && m.ProductName != nil {
		return *m.ProductName
	}
	return ""
}

func (m *Order) GetMoney() string {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return ""
}

func (m *Order) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

type Resp struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Msg              *string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Resp) Reset()         { *m = Resp{} }
func (m *Resp) String() string { return proto.CompactTextString(m) }
func (*Resp) ProtoMessage()    {}

func (m *Resp) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Resp) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type Calculate struct {
	Input            *string `protobuf:"bytes,1,opt,name=input" json:"input,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Calculate) Reset()         { *m = Calculate{} }
func (m *Calculate) String() string { return proto.CompactTextString(m) }
func (*Calculate) ProtoMessage()    {}

func (m *Calculate) GetInput() string {
	if m != nil && m.Input != nil {
		return *m.Input
	}
	return ""
}

func init() {
	proto.RegisterEnum("DBOperationRespAck_Status", DBOperationRespAck_Status_name, DBOperationRespAck_Status_value)
}
